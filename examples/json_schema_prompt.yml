name: JSON Schema Response Example
description: Example prompt demonstrating responseFormat and jsonSchema usage
model: openai/gpt-4o-mini
responseFormat: json_schema
jsonSchema: |-
  {
    "name": "animal_description",
    "strict": true,
    "schema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the animal"
        },
        "habitat": {
          "type": "string",
          "description": "The habitat where the animal lives"
        },
        "diet": {
          "type": "string",
          "description": "What the animal eats",
          "enum": ["carnivore", "herbivore", "omnivore"]
        },
        "characteristics": {
          "type": "array",
          "description": "Key characteristics of the animal",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["name", "habitat", "diet"],
      "additionalProperties": false
    }
  }
messages:
  - role: system
    content: You are a helpful assistant that provides detailed information about animals.
  - role: user
    content: "Describe a {{animal}} in detail."
testData:
  - animal: "dog"
  - animal: "cat"
  - animal: "elephant"
evaluators:
  - name: has-name
    string:
      contains: "name"
  - name: has-habitat
    string:
      contains: "habitat"
